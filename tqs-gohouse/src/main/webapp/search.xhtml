<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<!DOCTYPE html>
<html 
    xmlns = "http://www.w3.org/1999/xhtml" 
    xmlns:h = "http://java.sun.com/jsf/html"
    xmlns:p = "http://primefaces.org/ui"
    xmlns:f="http://xmlns.jcp.org/jsf/core"
    xmlns:b="http://bootsfaces.net/ui"
    xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <h:head>
        <title>goHouse</title>

                 <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
        <style>
       /* Set the size of the div element that contains the map */
      #map {
        height: 550px;  /* The height is 400 pixels */
        width: 100%;  /* The width is the width of the web page */
       }
    </style>
    </h:head>
    <h:body style="padding: 60px;">
        <div></div>
        
        
        
        <!--Navigation bar -->
        <b:navBar brand="Home" brandHref="faces/home.xhtml" inverse="true" fixed="top">
            <b:navbarLinks>
                <b:navLink value="Login" href="faces/login.xhtml"></b:navLink>
                <b:navLink value="Adicionar Propriedade" href="faces/addProperty.xhtml"></b:navLink>
                <b:navLink value="Adicionar Quartos" href="faces/addRoom.xhtml"></b:navLink>
                <b:navLink value="Registar Universidade" href="faces/registerUniversity.xhtml"></b:navLink>
                <b:navLink value="Pesquisar" href="#"></b:navLink>
            </b:navbarLinks>
        </b:navBar>

        <div class="row">
    <div class="col-sm-6">
      <h2>Resultados da pesquisa por "#{searchBean.searchValue}":</h2>
        <h:form>
            <p:inputText value="#{searchBean.searchValue}"/> <p:commandButton value="Search!" action="#{searchBean.searchProperties}"/>

            <p:dataScroller value="#{searchBean.searchResults}" var="prop" chunkSize="10" >
                <f:facet name="header">
                    Scroll Down to Load More
                </f:facet>

                <h:panelGrid columns="2" style="width:100%" columnClasses="logo,detail">
                    <!--<p:graphicImage name="demo/images/car/-big.gif" /> -->
                    <p:outputPanel>
                        <h:panelGrid columns="2" cellpadding="5" >
                            <h:outputText value="EndereÃ§o:" />
                            <h:outputText value="#{prop.address}" style="font-weight: bold"/>
                            
                            <h:outputText value="Year:" />
                            <h:outputText value="#{prop.type}" style="font-weight: bold"/>
                            <b:icon name="globe" size="2x" onclick="centerAt(#{prop.latitude},#{prop.longitude})"/>
                            <h5><b><a href="faces/propertyDetailsPage.xhtml?propertyId=#{prop.id}">Details</a></b></h5>

                            <p/>
                        </h:panelGrid>
                    </p:outputPanel>
                </h:panelGrid>
            </p:dataScroller>
        </h:form>
    </div>
    <div class="col-sm-6">
    <div id="map"></div>

    </div>
  </div>
        
        
        
<script>        

    
var map;


// Initialize and add the map
function initMap() {
  // The map, centered somewhere in Africa for now
  map = new google.maps.Map(
      document.getElementById('map'), {zoom: 4, center: {lat: 10, lng: 10}});
      
  var searchCoords = JSON.parse('#{searchBean.searchResults}');
  
  var markers = new Array(searchCoords.length);
  for (i = 0; i &lt; searchCoords.length; i++){
      coord = { lat: searchCoords[i].latitude, lng: searchCoords[i].longitude};
      markers[i] = new google.maps.Marker({position: coord, map: map, title: searchCoords[i].address});
    }        
    map.setCenter({lat: searchCoords[0].latitude, lng: searchCoords[0].longitude});
}

function centerAt(lat,long){
    var target = {lat: lat, lng: long};
    
    map.setCenter(target);
}
function markMap(lat,long){
    var target = {lat: lat, lng: long};
    
    var marker = new google.maps.Marker({position: uluru, map: map});
}
    </script>
    <!--Load the API from the specified URL
    * The async attribute allows the browser to render the page while the API loads
    * The key parameter will contain your own API key (which is not needed for this tutorial)
    * The callback parameter executes the initMap() function
    -->
    <script async="true" defer="true" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCE8YN0Mk-_6oeAKeJWAWt0K8V3e1kdVRY&amp;callback=initMap">
    </script>

        
    </h:body>
</html>